---
interface Props {
	id: string;
	open?: boolean;
}

const { id, open } = Astro.props;
---

<details id={id} open={open}>
  <summary><slot name="summary"></slot></summary>
  <slot></slot>
</details>
<script>
  let abortController = new AbortController();
  document.addEventListener("astro:page-load", () => {
    if (abortController) {
      abortController.abort();
    }
    abortController = new AbortController();
    const details = document.querySelectorAll('details')
    for (const detail of details) {
      const openState = localStorage.getItem(detail.id)
      console.log(detail.id, openState)
      detail.open = openState !== 'false';

      detail.addEventListener('toggle', (event) => {
        localStorage.setItem(detail.id, detail.open ? 'true' : 'false')
      }, { signal: abortController.signal })
    }
  })
  document.addEventListener("astro:page-unload", () => {
    abortController.abort();
  })
</script>
<style>
  summary {
    display: flex;
    gap: 1rem;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    padding: .5rem;
    border-radius: .5rem;
  }

  summary:hover {
    background-color: rgb(45, 45, 45);
  }

  summary:focus-visible {
    outline: 4px solid rgb(255, 179, 0);
    outline-offset: 2px;
  }

  summary::marker {
    content: none;
  }

  summary::after {
    content: "";
    background-image: url(/details.svg);
    filter: invert();
    height: 24px;
    width: 24px;
    display: block;
    background-size: 24px;
    transition: all .2s ease;
  }

  details[open] summary::after {
    transform: rotate(90deg);
  }
</style>