---
import closeIcon from "../icons/close.svg?raw";
import Button from "./Button.astro";

interface Props {
	title: string;
	id: string;
}

const { title, id } = Astro.props;
---

<dialog inert class="popover" id={id} tabindex="0" transition:persist="filter-dialog">
  <header>
    <h1>{title}</h1>
    <Button id="filter-close-button" aria-label="close">
      <Fragment set:html={closeIcon} />
    </Button>
  </header>
  <div class="content">
    <slot></slot>
  </div>
</dialog>
<script>
  const dialogs = document.querySelectorAll('dialog');
  dialogs.forEach(dialog => {
    const close = dialog.querySelector('button[aria-label="close"]');
    close?.addEventListener('click', () => {
      dialog.inert = true;
      dialog.close();
    });
    // Close dialog when clicking the backdrop
    dialog.addEventListener('click', (event) => {
      if (event.target === event.currentTarget) {
        dialog.inert = true;
        (event.currentTarget as HTMLDialogElement)?.close()
      }
    });
  });
</script>
<style>
  .popover {
    /* bottom: -8rem; */
    padding: 0;
    top: auto;
    position: fixed;
    margin: auto;
    width: 100%;
    max-width: 800px;
    box-sizing: border-box;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(20px);
    border-radius: 1rem 1rem 0 0;
    color: #fff;
    border: none;
    transform-origin: bottom;
    transform: translate(0, 100vh);
    transition: all .4s cubic-bezier(0.485, -0.050, 0.285, 1.105) allow-discrete;
    z-index: 1000;
    overflow: hidden;
    max-height: 80vh;
    bottom: 0;
    height: 100%;
    display: grid;
    box-shadow: 0 0 6px -2px gold;
  }

  .content {
    overflow-y: auto;
    padding-bottom: 8rem;
  }

  dialog[open] {
    transform: translate(0, 0);
    visibility: visible;
    opacity: 1;
  }

  dialog:focus-visible {
    outline: 4px solid rgb(255, 179, 0);
    outline-offset: -4px;
  }

  @starting-style {
    dialog[open] {
      transform: translate(0, 80vh);
      visibility: hidden;
      opacity: 0;
    }
  }

  header {
    display: flex;
    justify-content: space-between;
    padding: 1rem 1rem 0 0;
    top: 0;
    border-bottom: 1px solid white;
  }

  button[aria-label="close"] {
    all: unset;
    color: white;
    padding: .5rem;
    height: 48px;
    width: 48px;
    box-sizing: border-box;
    border-radius: 48px;
    transition: background .3s;
  }

  button[aria-label="close"]:hover {
    cursor: pointer;
    color: black;
  }

  h1 {
    font-size: 2rem;
    font-family: "ltc-broadway-engraved", sans-serif;
    padding: .5rem 1rem;
    margin: 0;
  }
</style>
