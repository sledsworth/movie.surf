---
import { ClientRouter } from "astro:transitions";
import Footer from "src/components/Footer.astro";
import Header from "src/components/Header.astro";

interface Props {
	title: string;
	upsell?: boolean;
}

const { title, upsell } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
    <meta name="theme-color" content="black">
		<meta name="description" content="Find a movie to watchâ€”fast!" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="icon" type="image/png" href="/icon.png" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
    <link rel="stylesheet" href="https://use.typekit.net/upw6hrb.css">
    <slot name="head" />
    <ClientRouter />
	</head>
	<body tabindex="0">
    <div class="container">
      <slot name="header">
        <Header transition:persist="header" title="Movie Surf" />
      </slot>
      <main>
        <slot />
      </main>
      <slot name="footer">
        <Footer upsell={upsell} />
      </slot>
    </div>
	</body>
  <style is:global>
    html {
      font-size: 19px;
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue';
      font-weight: 400;
      font-style: normal;
      accent-color: black;
      margin: 0;
      padding: 0;
      min-height: 100vh;
      background-color: oklch(0.22 0.08 26.62);
      overflow-x: hidden;
      max-width: 100vw;
    }

    html:has(dialog[open]) {
      overflow: hidden;
    }

    @keyframes gradient-move {
      0% {
        background-position: 50% 50%, 30% 30%, 70% 70%;
      }
      50% {
        background-position: 40% 60%, 60% 40%, 80% 20%;
      }
      100% {
        background-position: 70% 70%, 20% 50%, 50% 80%;
      }
    }

    body {
      background: radial-gradient(circle at 50% 50%, oklch(0.36 0.16 29.9), transparent), radial-gradient(circle at 30% 30%, oklch(0.36 0.16 29.9), transparent), radial-gradient(circle at 70% 70%, black, black);
      background-size: 150% 150%;
      background-repeat: no-repeat;
      animation: gradient-move 5s infinite alternate ease-in-out;
      margin: 0;
    }

    body:has(dialog[open]) {
      overflow: hidden;
    }

    body::before {
      content: "";
      position: fixed;
      width: 100vw;
      height: 100vh;
      outline: 4px solid transparent;
      outline-offset: -4px;
      transition: outline 0.25s;
      pointer-events: none;
    }

    body:focus-visible::before {
      outline: 4px solid rgb(255, 179, 0);
      outline-offset: -4px;
    }

    .container {
      min-height: 100vh;
      max-width: 800px;
      margin: auto;
      padding: 1rem;
    }

    img {
      border-radius: .25rem;
    }

    h1, h2, h3 {
      font-family: "ltc-broadway-engraved", sans-serif;
      font-weight: 400;
      font-style: normal;
    }

  .glow {
    box-shadow: 0 0 20px 6px gold;
    animation: glow 2s ease infinite alternate;
    transition: box-shadow 0.5s;
  }

  .glow:hover,
  .glow:focus {
    animation: glow-intense 2s ease infinite alternate;
  }

  @keyframes glow-checkmark {
    0% {
      box-shadow: 0 0 6px -2px gold;
    }
    100% {
      box-shadow: 0 0 10px 2px gold;
    }
  }

  @keyframes glow {
    0% {
      box-shadow: 0 0 60px -10px gold;
    }
    100% {
      box-shadow: 0 0 60px 0px gold;
    }
  }


  @keyframes glow-intense {
    0% {
      box-shadow: 0 0 100px 0px gold;
    }
    100% {
      box-shadow: 0 0 100px 10px gold;
    }
  }

  @keyframes lightOn {
    0% {
      opacity: .4;
      box-shadow: inset 0 0 4px 4px gold, 0 0 10px 10px gold;
    }

    50% {
      opacity: .95;
      box-shadow: inset 0 0 -10px 40px gold, 0 0 60px 10px gold;
    }

    100% {
      opacity: .4;
      box-shadow: inset 0 0 4px 4px gold, 0 0 10px 10px gold;
    }
  }

  p {
    line-height: 1.4;
  }

  a {
    color: white;
    font-weight: bold;
    text-decoration: underline;
    text-decoration-style: dashed;
    text-underline-offset: 4px;
    text-decoration-thickness: 1px;
  }

  a:hover {
    text-decoration-style: solid;
    text-decoration-color: rgb(255, 179, 0);
  }

  a:focus {
    outline: 4px solid rgb(255, 179, 0);
    outline-offset: 2px;
    border-radius: .25rem;
  }

  hr {
    margin: 2rem 0;
    border: none;
    border-top: 1px solid darkgoldenrod;
    width: 100%;
    max-width: 400px;
  }
  </style>
</html>
