---
import { ClientRouter } from "astro:transitions";
import Header from "src/components/Header.astro";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
    <meta name="theme-color" content="black">
		<meta name="description" content="Find a movie to watchâ€”fast!" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
    <link rel="stylesheet" href="https://use.typekit.net/upw6hrb.css">
    <slot name="head" />
    <ClientRouter />
	</head>
	<body>
    <slot name="header">
      <Header title="Movie Surf" />
    </slot>
    <main>
      <slot />
    </main>
    <slot name="footer" />
	</body>
  <style is:global>
    html {
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue';
      font-weight: 400;
      font-style: normal;
      accent-color: black;
      margin: 0 auto;
      padding: 0;
      min-height: 100vh;
      background-color: black;
      /* border-radius: 4px; */
      background: radial-gradient(circle at 50% 50%, oklch(0.36 0.16 29.9), transparent),
              radial-gradient(circle at 30% 30%, oklch(0.36 0.16 29.9), transparent),
              radial-gradient(circle at 70% 70%, black, black);
      background-size: 150% 150%;
      background-repeat: no-repeat;
      animation: gradient-move s infinite alternate ease-in-out;
        }

        @keyframes gradient-move {
      0% {
        background-position: 50% 50%, 30% 30%, 70% 70%;
      }
      50% {
        background-position: 40% 60%, 60% 40%, 80% 20%;
      }
      100% {
        background-position: 70% 70%, 20% 50%, 50% 80%;
      }
    }
    
    body {
      max-width: 800px;
      margin: auto;
      padding: 1rem;
    }

    body:has(dialog[open]) {
      overflow: hidden;
    }

    img {
      border-radius: .25rem;
    }
  
    h1, h2, h3 {
      font-family: "ltc-broadway-engraved", sans-serif;
      font-weight: 400;
      font-style: normal;
    }
  
    h1 {
      text-align: center;
      font-size: clamp(3rem, 10vw, 6rem);
      margin: 0 1rem;
      line-height: 1;
    }

    .marquee {
      background: url(/marquee.svg) repeat;
      background-color: white;
      padding: 4rem 2rem 2rem;
      border-radius: .25rem;
      width: 100%;
      box-sizing: border-box;
      text-align: center;

      a {
        all: unset;
      }
    }
    
    .marquee-container {
      border: 24px solid;
      border-radius: 1rem;
      padding: 0;
      background-color: black;
      /* background-clip: padding-box;
      border-image: url(#circle) 27 round; */
      min-height: 8rem;
      grid-column: 1 / 4;
      grid-row: 1 / 4;
      display: flex;
      flex-direction: column;
      /* box-shadow: 0 0 60px 1px gold;   */
    }
    
  
  .light-bar {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    /* padding: .25rem; */
    grid-column: 1 / 2;
    grid-row: 1 / 4;
  }

  .light-bar:not(.light-bar--horizontal) {
    height: calc(100% - .25rem);
    justify-content: space-between;
    align-items: center;
    }

  .light-bar:not(.light-bar--horizontal) ~ .light-bar:not(.light-bar--horizontal) {
    grid-column: 3 / 4;
  }

  .light-bar--horizontal {
    flex-direction: row;
    grid-row: 1 / 2;
    grid-column: 2 / 3;
    justify-content: space-evenly;
    height: 1.5rem;
    margin: .5rem;
    align-items: center;
  }

  .light-bar.light-bar--horizontal ~ .light-bar.light-bar--horizontal {
    grid-row: 3 / 4;
  }

  @media screen and (max-width: 800px) {
    .light-bar.light-bar--horizontal .light:nth-last-child(-n + 2) {
      display: none;
    }
  }

  @media screen and (max-width: 600px) {
    .light-bar.light-bar--horizontal .light:nth-last-child(-n + 4) {
      display: none;
    }
  }

  @media screen and (max-width: 440px) {
    .light-bar.light-bar--horizontal .light:nth-last-child(-n + 6) {
      display: none;
    }
  }
  
  @media screen and (max-width: 360px) {
    .light-bar.light-bar--horizontal .light:nth-last-child(-n + 8) {
      display: none;
    }
  }
  
  header {
    display: grid;
    grid-template-columns: 1.5rem 1fr 1.5rem;
    grid-template-rows: 1.5rem 1fr 1.5rem;
    align-items: center;
    margin: 3rem 0;
  }
  
  .light {
    height: 1rem;
    width: 1rem;
    border-radius: 2rem;
    border: 1px solid white;
    z-index: 10;
    /* box-shadow: inset 0 0 2px 2px white;
    opacity: .9; */
  }
  
  .light::before {
    display: block;
    position: relative;
    content: "";
    z-index: 10;
    height: 1rem;
    width: 1rem;
    border-radius: 2rem;
    opacity: .4;
    box-shadow: inset 0 0 4px 4px gold, 0 0 10px 10px gold;
    animation: 2s cubic-bezier(0.42, 0, 0.58, 1) infinite  lightOn;
  }
  
  .light.alternate::before {
    animation: 2s cubic-bezier(0.42, 0, 0.58, 1) 1s infinite lightOn;
  }
  
  .glow {
    box-shadow: 0 0 20px 6px gold;
    animation: glow 2s ease infinite alternate;
  }

  @keyframes glow-checkmark {
    0% {
      box-shadow: 0 0 6px -2px gold;
    }
    100% {
      box-shadow: 0 0 10px 2px gold;
    }
  }

  @keyframes glow {
    0% {
      box-shadow: 0 0 60px -10px gold;
    }
    100% {
      box-shadow: 0 0 60px 0px gold;
    }
  }

  @keyframes lightOn {
    0% {
      opacity: .4;
      box-shadow: inset 0 0 4px 4px gold, 0 0 10px 10px gold;
    }
  
    50% {
      opacity: .95;
      box-shadow: inset 0 0 -10px 40px gold, 0 0 60px 10px gold;
    }
  
    100% {
      opacity: .4;
      box-shadow: inset 0 0 4px 4px gold, 0 0 10px 10px gold;
    }
  }
  </style>
</html>
