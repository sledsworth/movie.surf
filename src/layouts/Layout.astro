---
import { ViewTransitions } from "astro:transitions";
import Header from "src/components/Header.astro";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
    <link rel="stylesheet" href="https://use.typekit.net/upw6hrb.css">
    <slot name="head" />
    <ViewTransitions />
	</head>
	<body>
    <slot name="header">
      <Header title="Movie Surf" subtitle="Watch moviesâ€”let us do the surfing." />
    </slot>
    <main>
      <slot />
    </main>
    <slot name="footer" />
	</body>
  <style is:global>
    html {
      background-color: oklch(0.36 0.16 29.9);
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue';
      font-weight: 400;
      font-style: normal;
      accent-color: black;
      max-width: 800px;
      margin: 0 auto;
    }
  
    img {
      border-radius: .25rem;
    }
  
    h1, h2, h3 {
      font-family: "ltc-broadway-engraved", sans-serif;
      font-weight: 400;
      font-style: normal;
    }
  
    h1 {
      text-align: center;
      font-size: clamp(3rem, 10vw, 6rem);
      margin: 0 1rem;
      line-height: 1;
    }
  
    .genre-list {
      list-style: none;
      padding: 0;
      margin: 0;
      display: flex;
      justify-content: center;
      gap: .5rem;
      flex-wrap: wrap;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      margin: 1rem 0 10rem;
    }

    .button-group {
      display: flex;
      gap: 1rem;
      justify-content: center;
      position: fixed;
      bottom: 2rem;
      width: calc(100% - 2rem);
      max-width: 800px;
      margin: auto;
    }
    
    button {
      appearance: none;
      border: none;
      cursor: pointer;
      padding: 1rem 2rem;
      border-radius: 2rem;
      background-color: gold;
      color: black;
      font-weight: 600;
      font-size: 1.5rem;
      flex: 1;
    }

    button:hover {
      background-color: goldenrod;
    }
  
   input[type="checkbox"] {
    appearance: none;
    margin: 0;
    width: 1.25rem;
    height: 1.25rem;
    background-color: white;
    border-radius: .25rem;
    display: grid;
    place-content: center;
    cursor: pointer;
  }
  
  input[type="checkbox"]:checked {
    background: url(/checkmark.svg);
    background-size: 1rem 1.25rem;
    background-repeat: no-repeat;
    background-position: center;
    background-color: gold;
    box-shadow: 0 0 6px -2px gold;
    animation: glow-checkmark 2s ease infinite alternate;
  }
  
  input[type="checkbox"]:focus-visible {
    outline: none;
  }
  
  label:has(input[type="checkbox"]:focus-visible) {
    outline: max(2px, 0.15em) solid currentColor;
    outline-offset: max(2px, 0.15em);
  }
  
  .genre-list label {
    cursor: pointer;
    display: inline-block;
    padding: .25rem 1rem .25rem .25rem;
    /* border-radius: 2rem;
    background-color: black; */
    color: white;
    display: flex;
    align-items: center;
    gap: .5rem;
  }
  
  .light-bar {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    /* padding: .25rem; */
    grid-column: 1 / 2;
    grid-row: 1 / 4;
  }

  .light-bar:not(.light-bar--horizontal) {
    height: calc(100% - .25rem);
    justify-content: space-between;
    align-items: center;
    }

  .light-bar:not(.light-bar--horizontal) ~ .light-bar:not(.light-bar--horizontal) {
    grid-column: 3 / 4;
  }

  .light-bar--horizontal {
    flex-direction: row;
    grid-row: 1 / 2;
    grid-column: 2 / 3;
    justify-content: space-evenly;
    height: 1.5rem;
    margin: .5rem;
    align-items: center;
  }

  .light-bar.light-bar--horizontal ~ .light-bar.light-bar--horizontal {
    grid-row: 3 / 4;
  }

  @media screen and (max-width: 800px) {
    .light-bar.light-bar--horizontal .light:nth-last-child(-n + 2) {
      display: none;
    }
  }

  @media screen and (max-width: 600px) {
    .light-bar.light-bar--horizontal .light:nth-last-child(-n + 4) {
      display: none;
    }
  }

  @media screen and (max-width: 440px) {
    .light-bar.light-bar--horizontal .light:nth-last-child(-n + 6) {
      display: none;
    }
  }
  
  @media screen and (max-width: 360px) {
    .light-bar.light-bar--horizontal .light:nth-last-child(-n + 8) {
      display: none;
    }
  }
  
  header {
    display: grid;
    grid-template-columns: 1.5rem 1fr 1.5rem;
    grid-template-rows: 1.5rem 1fr 1.5rem;
    align-items: center;
    margin: 3rem 0;
  }
  
  .light {
    height: 1rem;
    width: 1rem;
    border-radius: 2rem;
    border: 1px solid white;
    z-index: 10;
    /* box-shadow: inset 0 0 2px 2px white;
    opacity: .9; */
  }
  
  .light::before {
    display: block;
    position: relative;
    content: "";
    z-index: 10;
    height: 1rem;
    width: 1rem;
    border-radius: 2rem;
    opacity: .4;
    box-shadow: inset 0 0 4px 4px gold, 0 0 10px 10px gold;
    animation: 2s cubic-bezier(0.42, 0, 0.58, 1) infinite  lightOn;
  }
  
  .light.alternate::before {
    animation: 2s cubic-bezier(0.42, 0, 0.58, 1) 1s infinite lightOn;
  }
  
  fieldset {
    border: 8px double black;
    padding: 1rem;
    margin: 1rem;
    border-radius: .5rem;
    display: inline-block;
    max-width: 500px;
  }
  
  legend {
    font-size: 2rem;
    font-family: "ltc-broadway-engraved", sans-serif;
    padding: .5rem;
  }

  .marquee {
    background: url(/marquee.svg) repeat;
    background-color: white;
    border: 24px solid;
    border-radius: .25rem;
    padding: 2rem;
    /* background-clip: padding-box;
    border-image: url(#circle) 27 round; */
    min-height: 8rem;
    grid-column: 1 / 4;
    grid-row: 1 / 4;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    /* box-shadow: 0 0 60px 1px gold;   */
  }

  .movie-card {
    min-width: 100%;
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  .movie-card-details-meta {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    font-size: .85rem;
    font-weight: 600;
    font-variant: small-caps;
    margin-bottom: 1rem;
  }

  .movie-card-details-meta-genres {
    display: flex;
    gap: 1rem;
  }

  .movie-card .movie-card-image {
    aspect-ratio: 2 / 3;
    flex: 1 3 160px;
    height: intrinsic;
    width: 200px;
  }

  .movie-card .movie-card-details {
    flex:  3 2 300px;
    max-width: 600px;
  }

  .movie-card h2 {
    font-size: 3rem;
    margin: 0;
    line-height: 1;
  }

  .break:after {
    margin: 0 0 0 1rem;
    content: "|";
    display: inline-block;
  }

  .glow {
    box-shadow: 0 0 20px 6px gold;
    animation: glow 2s ease infinite alternate;
  }

  @keyframes glow-checkmark {
    0% {
      box-shadow: 0 0 6px -2px gold;
    }
    100% {
      box-shadow: 0 0 10px 2px gold;
    }
  }

  @keyframes glow {
    0% {
      box-shadow: 0 0 60px -10px gold;
    }
    100% {
      box-shadow: 0 0 60px 0px gold;
    }
  }

  @keyframes lightOn {
    0% {
      opacity: .4;
      box-shadow: inset 0 0 4px 4px gold, 0 0 10px 10px gold;
    }
  
    50% {
      opacity: .95;
      box-shadow: inset 0 0 -10px 40px gold, 0 0 60px 10px gold;
    }
  
    100% {
      opacity: .4;
      box-shadow: inset 0 0 4px 4px gold, 0 0 10px 10px gold;
    }
  }
  </style>
</html>
