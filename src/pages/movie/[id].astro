---
import { getMovieDetails, getRandomMovie, type Movie } from "@data/tmdb";
import MoviePage from "src/components/MoviePage.astro";

export const prerender = false;
const id = Astro.params.id;

interface MovieForm {
	genres: number[];
	good: boolean;
	decade?: number;
	page: number;
	providers?: number[];
}

const formData: MovieForm = {
	genres: [],
	good: true,
	decade: undefined,
	page: 1,
	providers: [],
};

let randomMovie: Movie | null = null;
let noMoviesFound = false;
if (Astro.request.method === "POST") {
	try {
		const data = await Astro.request.formData();
		// formData.good = data.get("good") === "on";
		formData.good = true;
		formData.genres = (data.getAll("genres") as unknown as number[]) || [];
		formData.decade = Number.parseInt(
			data.get("decade")?.toString() || "2000",
			10,
		);
		formData.providers =
			(data.getAll("providers") as unknown as number[]) || [];

		randomMovie = await getRandomMovie(formData);
		if (randomMovie !== null) {
			return Astro.redirect(`/movie/${randomMovie.id}`);
		}

		noMoviesFound = true;
	} catch (error) {
		if (error instanceof Error) {
			console.error(error.message);
		}
	}
}

if (id) {
	randomMovie = await getMovieDetails(id);
}
---

<MoviePage randomMovie={randomMovie} formData={formData} />;